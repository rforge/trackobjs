* write tests that GC-triggered flushing at the end of the R session does write out objects (a little tricky to test because the test needs to span multiple sessions)
* DONE: Think about automatic caching and garbage collection: now when a tracking env is garbage-collected at the end of the R session, if it isn't already flushed, it is flushed.
* DONE: write .Last.sys function that will call track.stop() (which calls track.sync(full=TRUE) and track.flush())
* add tests to testFollowObjs.Rout.save with recordAccesses=FALSE, and separately
  with maintainSummary=FALSE
* DONE: add tests for track.start(clobber="vars") and track.start(clobber="files")
* DONE: in track.start(), when clobbering files, make sure current var binding is not active (actually, this doesn't matter no -- we remove all clobbered var bindings before reassinging), and that var is trackable -- now gives a warning for untrackable/reserved/excluded var names
* DONE: in track.start(), need to check that files exist before clobbering vars, had this situation - now stop with an error message
* DONE: in track.stop(), replace .Last active binding by its value? (otherwise get an error when trying to run it?) - no seems OK
* DONE: in track.sync() handle the case \code{master="files"} and where objects are cached and where an underlying file is changed. (all cached objects are deleted)
* DONE: check if track.sync(master="file") is the same as track.rescan() - is now
* DONE: add argument to track.stop() to keep variables in R (do via track.remove/track.lift?)
* DONE: add tests for track.rescan(level="low") with changed file db (based on code in track.attach.Rt)
* DONE: add a read-only mode, and make that the default for track.attach()
* DONE: think about using lockEnvironment/lockBinding for a readonly tracking enviornment -- disadvantage is that it is a lot of work to change between readonly=TRUE and readonly=FALSE (solution was to just use lockEnvironment())
* DONE: write tests for track.attach(readonly=TRUE/FALSE)
* DONE: add docs to trackObjs-package.Rd to emphasize simple usage.
* DONE: add tests for track.attach()
* DONE: add track.auto() function to control use of auto-tracking (turn on and off, show status)
* DONE: change tests over to use auto=TRUE (the default), or duplicate for that case
* DONE: figure out what to do about the case of {rm(x); x <- 1} when auto=TRUE -- this results in x not having an active binding, i.e., it is masked -- maybe detect this by a cleanup on exit function, and/or by running a more general check every 5 mins

